! function(e) {
    "use strict";
    e(window);
    var s, i, n, t, l, o = e("body");
    e("[data-bg-image]").each(function() {
        var s = e(this),
            i = s.data("bg-image");
        s.css("background-image", "url(" + i + ")")
    }), e(window).on("scroll", function(s) { e(window).scrollTop() + 1 > 250 ? e(".sticky-nav").addClass("menu_fixed animated fadeInDown") : e(".sticky-nav").removeClass("menu_fixed animated fadeInDown") }), e(".dropdown").on("show.bs.dropdown", function() { e(this).find(".dropdown-menu").first().stop(!0, !0).slideDown() }), e(".dropdown").on("hide.bs.dropdown", function() { e(this).find(".dropdown-menu").first().stop(!0, !0).slideUp() }), s = e(".offcanvas-toggle"), i = e(".offcanvas"), n = e(".offcanvas-overlay"), t = e(".mobile-menu-toggle"), s.on("click", function(s) {
        s.preventDefault();
        var i = e(this),
            t = i.attr("href");
        o.addClass("offcanvas-open"), e(t).addClass("offcanvas-open"), n.fadeIn(), i.parent().hasClass("mobile-menu-toggle") && i.addClass("close")
    }), e(".offcanvas-close, .offcanvas-overlay").on("click", function(e) { e.preventDefault(), o.removeClass("offcanvas-open"), i.removeClass("offcanvas-open"), n.fadeOut(), t.find("a").removeClass("close") }), (l = e(".offcanvas-menu, .overlay-menu")).find(".sub-menu").parent().prepend('<span class="menu-expand"></span>'), l.on("click", "li a, .menu-expand", function(s) {
        var i = e(this);
        ("#" === i.attr("href") || i.hasClass("menu-expand")) && (s.preventDefault(), i.siblings("ul:visible").length ? (i.parent("li").removeClass("active"), i.siblings("ul").slideUp(), i.parent("li").find("li").removeClass("active"), i.parent("li").find("ul:visible").slideUp()) : (i.parent("li").addClass("active"), i.closest("li").siblings("li").removeClass("active").find("li").removeClass("active"), i.closest("li").siblings("li").find("ul:visible").slideUp(), i.siblings("ul").slideDown()))
    });
    new Swiper(".hero-slider.swiper-container", { loop: !0, speed: 2e3, effect: "fade", autoplay: { delay: 7e3, disableOnInteraction: !1 }, navigation: { nextEl: ".swiper-button-next", prevEl: ".swiper-button-prev" } }), new Swiper(".tab-slider.swiper-container", { loop: !0, slidesPerView: 6, spaceBetween: 30, speed: 1500, navigation: { nextEl: ".swiper-button-next", prevEl: ".swiper-button-prev" }, breakpoints: { 0: { slidesPerView: 2 }, 478: { slidesPerView: 2 }, 576: { slidesPerView: 3 }, 768: { slidesPerView: 4 }, 992: { slidesPerView: 5 }, 1200: { slidesPerView: 6 } } }), new Swiper(".content-top", { slidesPerView: 2, spaceBetween: 30, speed: 1500, loop: !0, navigation: { nextEl: ".swiper-button-next", prevEl: ".swiper-button-prev" }, breakpoints: { 0: { slidesPerView: 1 }, 478: { slidesPerView: 1 }, 576: { slidesPerView: 1 }, 768: { slidesPerView: 2 }, 992: { slidesPerView: 2 }, 1200: { slidesPerView: 2 } } }), new Swiper(".feature-product-slider.swiper-container", { slidesPerView: 2, spaceBetween: 30, speed: 1500, loop: !0, navigation: { nextEl: ".swiper-button-next", prevEl: ".swiper-button-prev" }, breakpoints: { 0: { slidesPerView: 1 }, 478: { slidesPerView: 1 }, 576: { slidesPerView: 1 }, 768: { slidesPerView: 1 }, 992: { slidesPerView: 2 }, 1200: { slidesPerView: 2 } } }), new Swiper(".new-product-slider.swiper-container", { slidesPerView: 4, spaceBetween: 30, speed: 1500, loop: !0, navigation: { nextEl: ".swiper-button-next", prevEl: ".swiper-button-prev" }, breakpoints: { 0: { slidesPerView: 1 }, 478: { slidesPerView: 1 }, 576: { slidesPerView: 2 }, 768: { slidesPerView: 2 }, 992: { slidesPerView: 3 }, 1200: { slidesPerView: 4 } } });
    var r = new Swiper(".gallery-thumbs", { spaceBetween: 10, slidesPerView: 3, freeMode: !0, watchSlidesVisibility: !0, watchSlidesProgress: !0, centerMood: !0 }),
        a = (new Swiper(".gallery-top", { spaceBetween: 0, loop: !0, slidesPerView: 1, centerMood: !0, thumbs: { swiper: r } }), new Swiper(".zoom-thumbs", { spaceBetween: 18, slidesPerView: 3, freeMode: !0, watchSlidesVisibility: !0, watchSlidesProgress: !0, navigation: { nextEl: ".swiper-button-next", prevEl: ".swiper-button-prev" } })),
        p = (new Swiper(".zoom-top", { spaceBetween: 0, slidesPerView: 1, effect: "fade", fadeEffect: { crossFade: !0 }, thumbs: { swiper: a } }), a = new Swiper(".zoom-thumbs-2", { spaceBetween: 20, slidesPerView: 5, direction: "vertical", freeMode: !0, watchSlidesVisibility: !0, watchSlidesProgress: !0 }), new Swiper(".zoom-top-2", { spaceBetween: 0, loop: !0, thumbs: { swiper: a } }), r = new Swiper(".gallery-thumbs", { spaceBetween: 10, slidesPerView: 3, freeMode: !0, watchSlidesVisibility: !0, watchSlidesProgress: !0, navigation: { nextEl: ".swiper-button-next", prevEl: ".swiper-button-prev" } }), new Swiper(".gallery-top", { spaceBetween: 0, loop: !0, thumbs: { swiper: r } }), e(".cart-plus-minus"));
    p.prepend('<div class="dec qtybutton">-</div>'), p.append('<div class="inc qtybutton">+</div>'), e(".qtybutton").on("click", function() {
        var s = e(this),
            i = s.parent().find("input").val();
        if ("+" === s.text()) var n = parseFloat(i) + 1;
        else if (i > 1) n = parseFloat(i) - 1;
        else n = 1;
        s.parent().find("input").val(n)
    });
    new Swiper(".single-product-slider", { slidesPerView: 4, spaceBetween: 20, speed: 1500, loop: !0, navigation: { nextEl: ".swiper-button-next", prevEl: ".swiper-button-prev" }, breakpoints: { 0: { slidesPerView: 1 }, 478: { slidesPerView: 1 }, 576: { slidesPerView: 2 }, 768: { slidesPerView: 3 }, 992: { slidesPerView: 3 }, 1024: { slidesPerView: 4 }, 1200: { slidesPerView: 4 } } });
    e(".checkout-toggle2").on("click", function() { e(".open-toggle2").slideToggle(1e3) }), e(".checkout-toggle").on("click", function() { e(".open-toggle").slideToggle(1e3) }), e.scrollUp({ scrollText: '<i class="pe-7s-angle-up"></i>', easingType: "linear", scrollSpeed: 900, animation: "fade" }), e("[data-countdown]").each(function() {
        var s = e(this),
            i = e(this).data("countdown");
        s.countdown(i, function(e) { s.html(e.strftime('<span class="cdown hour"><span class="cdown-1">%-H</span><p>Hrs</p></span> <span class="cdown minutes"><span class="cdown-1">%M</span> <p>Min</p></span> <span class="cdown second"><span class="cdown-1"> %S</span> <p>Sec</p></span>')) })
    });
    new Swiper(".blog-post-media.swiper-container", { slidesPerView: 1, spaceBetween: 0, loop: !0, autoplay: { delay: 2e3, disableOnInteraction: !1 }, navigation: { nextEl: ".swiper-button-next", prevEl: ".swiper-button-prev" } }), new Swiper(".brand-slider.swiper-container", { slidesPerView: 4, speed: 1500, loop: !0, autoplay: { delay: 2e3, disableOnInteraction: !1 }, breakpoints: { 0: { slidesPerView: 1 }, 480: { slidesPerView: 2 }, 768: { slidesPerView: 2 }, 992: { slidesPerView: 3 }, 1200: { slidesPerView: 4 } } });
    e(".venobox").venobox()
}(jQuery);


const app = angular.module("admin", []);
var host = "http://localhost:8080";
const formData = new FormData();
var fileName;
var listImages = [];
var mainNameImage;
const timeElapsed = Date.now();

let uniqueId = Date.now().toString(36) + Math.random().toString(36).substring(2);

function changeTab() {
    $("#ProductManagement").removeClass("show active")
    $("#account-details").addClass("show active");

    $("#product").removeClass("active")
    $("#productEdit").addClass("active");
}

function removeImage(element, index) {
    element.remove();
    listImages.splice(index, 1);
    console.log(listImages);
}
//Method add new color product
function newColor() {
    var input = document.createElement("input");
    var div = document.createElement("div");
    var button = document.createElement("button");
    button.innerText = "Remove";
    div.className = "a-color";
    div.appendChild(button);
    div.appendChild(input);
    input.setAttribute('type', 'color');
    input.className = "value-color";
    button.addEventListener("click", function() {
        div.remove();
    });
    $(".more-color").append(div);
}
//Get value colors
function colorValues() {
    var colors = document.getElementsByClassName("value-color");
    var value = "";
    for (let i = 0; i < colors.length; i++) {
        value += colors[i].value + "+";
    }
    return value;
}

app.controller("admin-controller", function($scope, $http) {
    $scope.images = [];
    $scope.product = {};
    $scope.product.available = false;
    $('#gallery-photo-add').change(function(event) {
        var tmppath = URL.createObjectURL(event.target.files[0]);
        fileName = event.target.files[0];
        listImages.push(fileName);
        var img = document.createElement("img");
        //Set properties
        img.src = tmppath;
        //End set properties
        //Get index value in Array listImage
        let index = listImages.indexOf(fileName);
        //Add event for tag img
        img.addEventListener('click', () => {
            removeImage(img, index);
        });
        $(".sub-img").append(img);
        console.log(listImages);
    });

    $('#main-image').change(function(event) {
        var tmppath = URL.createObjectURL(event.target.files[0]);
        mainNameImage = event.target.files[0];
        $('#main-img').attr('src', tmppath);
        console.log(mainNameImage);
    });


    $scope.add = function() {
        formData.delete("listImages[]");
        for (var i = 0; i < listImages.length; i++) {
            formData.append('listImages[]', listImages[i]);
        }
        $http.post(`${host}/uploadObject`, formData, {
            transformRequest: angular.identity,
            headers: {
                'Content-type': undefined
            }
        }).then(resp => {
            try {
                var data = resp.data;
                alert(data);
            } catch (error) {

            }
        }).catch(error => {
            console.log(error);
        })
    }
    $scope.dataProducts = function() {
        $scope.today = new Date(timeElapsed);
        $scope.available = false;
        //Display categories
        $http.get(`${host}/getAll/categories`).then(resp => {
            $scope.cate = resp.data;
        });
        //Load country
        $http.get("File_Local/JSON/country.json").then(function(d) {
            $scope.country = d.data;
        });
        //Load all products
        $http.get(`${host}/getAll/products`).then(resp => {
            $scope.products = resp.data;
        }).catch(error => {
            console.log(error);
        })
    };
    $scope.uploadImage = function(nameFolder) {
        formData.delete("listImages[]");
        formData.delete("nameFloder");
        formData.delete("main-img");
        formData.append("nameFloder", nameFolder);
        formData.append("main-img", mainNameImage);
        for (var i = 0; i < listImages.length; i++) {
            formData.append('listImages[]', listImages[i]);
        }
        $http.post(`${host}/uploadImages`, formData, {
            transformRequest: angular.identity,
            headers: {
                'Content-type': undefined
            }
        }).then(resp => {
            console.log(resp.data);
        });


    }
    $scope.createProduct = function() {
        //Add new product
        $scope.product.createdate = $scope.today;
        $scope.product.color = colorValues();
        $scope.product.image = uniqueId;
        $http.post(`${host}/create/product`, $scope.product).then(resp => {
            if (resp.data.id != null) {
                $scope.product = {};
                alert("Add new product successfully!");
            }
            //Add image
            $scope.uploadImage(resp.data.image);
        });
    }
    $scope.updateProduct = function() {
            //Update image
            //Update product
            $http.put(`${host}/update/product`, $scope.product).then(resp => {
                alert("Update " + resp.data.name + " successfully!");
            })
        }
        //Method cut value colors
    $scope.cutValueColors = function(value) {
            var ds = [];
            var start = 0;
            var chart = "";
            if (value != undefined) {
                for (var i = 0; i < value.length; i++) {
                    if (value.charAt(i) == '+') {
                        chart = value.substring(start, i++);
                        ds.push(chart.trim());
                        start = i;
                    }
                }
            }

            return ds;
        }
        //Method cut value src image
    $scope.cutValuesSubImage = function(value) {
            value = value.substring(value.indexOf("File_Local"), value.length);
            return value;
        }
        //Edit product
    $scope.edit = function(value) {
            $scope.product = angular.copy(value);
            var img = [];
            changeTab();
            console.log($scope.product);
            //Get sub image
            $http.get(`${host}/getImage/subImage/${$scope.product.image}`).then(resp => {
                resp.data.forEach(element => {
                    img.push($scope.cutValuesSubImage(element));
                });
                $scope.listImages = img;
                listImages = img;
                console.log(listImages);
            }).catch(error => {
                console.log(error);
            });
            //Get main image
            $http.get(`${host}/getImage/mainImage/${$scope.product.image}`).then(resp => {
                mainNameImage = $scope.cutValuesSubImage(resp.data);
                $scope.mainNameImage = mainNameImage;
                console.log(mainNameImage);
            }).catch(error => {
                console.log(error);
            });
        }
        //Reset form
    $scope.reset = function() {
        $scope.product = {};
    }
    $scope.dataProducts();
});